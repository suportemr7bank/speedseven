# Generated by Django 3.2 on 2022-06-06 17:32

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import investment.interfaces.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('investment', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='IncomeOperation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(choices=[('WAIT', 'Aguardando'), ('FINI', 'Finalizado com sucesso'), ('RUNN', 'Calculando'), ('ERRO', 'Finalizado com erros')], default='WAIT', max_length=4, verbose_name='Situação')),
                ('income_date', models.DateField(verbose_name='Mês do cálculo')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Data de criação')),
                ('date_started', models.DateTimeField(blank=True, null=True, verbose_name='Início da operação')),
                ('date_finished', models.DateTimeField(blank=True, null=True, verbose_name='Fim da operação')),
                ('full_rate', models.FloatField(validators=[investment.interfaces.validators.validate_greate_than_zero], verbose_name='Percentual cheio')),
                ('costs_rate', models.FloatField(validators=[investment.interfaces.validators.validate_greate_than_zero], verbose_name='Custos')),
                ('net_rate', models.FloatField(validators=[investment.interfaces.validators.validate_greate_than_zero], verbose_name='Percentual líquido')),
                ('paid_rate', models.FloatField(validators=[investment.interfaces.validators.validate_greate_than_zero], verbose_name='Percentual pago')),
                ('error_message', models.CharField(blank=True, editable=False, max_length=1000, null=True)),
                ('application', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='investment.application', verbose_name='Aplicação')),
                ('operator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Operador')),
            ],
        ),
        migrations.CreateModel(
            name='ApplicationSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('min_initial_deposit', models.FloatField(help_text='Valor inicial aceito para abertura de conta', validators=[investment.interfaces.validators.validate_greate_than_zero], verbose_name='Depósito inicial mínimo')),
                ('min_deposit', models.FloatField(help_text='Valor mínimo para depósito após abertura de conta', validators=[investment.interfaces.validators.validate_greate_than_zero], verbose_name='Depósito mínimo')),
                ('deposit_term', models.IntegerField(help_text='Prazo para o aporte ser compensado', validators=[django.core.validators.MinValueValidator], verbose_name='Prazo para aporte (dias)')),
                ('withdraw_account_term', models.IntegerField(validators=[django.core.validators.MinValueValidator], verbose_name='Prazo para resgate da carteira (dias)')),
                ('withdraw_income_term', models.IntegerField(validators=[django.core.validators.MinValueValidator], verbose_name='Prazo para resgate do rendimento (dias)')),
                ('value_threshold', models.FloatField(help_text='Contas com valor acima deste tem prazo de resgate especial', validators=[django.core.validators.MinValueValidator], verbose_name='Valor limite')),
                ('withdraw_threshold_term', models.IntegerField(help_text='Todo resgate acima do valor limite obedecerá este prazo', validators=[django.core.validators.MinValueValidator], verbose_name='Prazo para resgate acima do valor limite (dias)')),
                ('application', models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='pool_account_settings', to='investment.application', verbose_name='Aplicação')),
            ],
            options={
                'verbose_name': 'Configuração da aplicação',
                'verbose_name_plural': 'Configurações das aplicações',
            },
        ),
        migrations.CreateModel(
            name='AccountSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('custom_rate', models.FloatField(blank=True, help_text='Sobrepõe o valor de aporte padrão da aplicação somente para este cliente', null=True, validators=[investment.interfaces.validators.validate_null_or_greate_than_zero], verbose_name='Percentual especial')),
                ('min_initial_deposit', models.FloatField(blank=True, help_text='Depósito mínimo específico para o cliente', null=True, validators=[investment.interfaces.validators.validate_null_or_greate_than_zero], verbose_name='Depósito mínimo inicial')),
                ('deposit_term', models.IntegerField(blank=True, help_text='Prazo de compensação de aporte específico para o cliente', null=True, validators=[django.core.validators.MinValueValidator], verbose_name='Prazo para aporte em dias')),
                ('application_account', models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, to='investment.applicationaccount', verbose_name='Aplicação')),
            ],
            options={
                'verbose_name': 'Configuração da conta do cliente',
                'verbose_name_plural': 'Configurações das contas dos clientes',
            },
        ),
    ]
