# Generated by Django 3.2 on 2022-06-06 17:32

import clients.models
import django.core.validators
from django.db import migrations, models
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.CharField(blank=True, max_length=2048, null=True, verbose_name='Mensagem')),
                ('status', models.CharField(blank=True, choices=[('CRE', 'Criado'), ('WAI', 'Aguardando'), ('APP', 'Aprovado'), ('DIS', 'Reprovado')], max_length=3, null=True, verbose_name='Situação')),
                ('first_name', models.CharField(max_length=150, verbose_name='Nome')),
                ('last_name', models.CharField(max_length=150, verbose_name='Sobrenome')),
                ('type', models.CharField(choices=[('PF', 'Pessoa física'), ('PJ', 'Pessoa jurídica')], default='PF', max_length=2, verbose_name='Pessoa física/jurídica')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Data de nascimento')),
                ('cpf', models.CharField(blank=True, max_length=14, null=True, verbose_name='CPF')),
                ('cnpj', models.CharField(blank=True, max_length=20, null=True, verbose_name='CNPJ')),
                ('company_name', models.CharField(blank=True, max_length=256, null=True, verbose_name='Nome da empresa')),
                ('phone', models.CharField(blank=True, max_length=15, null=True, verbose_name='Telefone')),
                ('address', models.CharField(blank=True, max_length=256, null=True, verbose_name='Endereço')),
                ('number', models.CharField(blank=True, max_length=10, null=True, verbose_name='Número')),
                ('complement', models.CharField(blank=True, max_length=64, null=True, verbose_name='Complemento')),
                ('zip_code', models.CharField(blank=True, max_length=9, null=True, verbose_name='Cep')),
                ('city', models.CharField(blank=True, max_length=128, null=True, verbose_name='Cidade')),
                ('state', models.CharField(blank=True, choices=[('AC', 'Acre'), ('AL', 'Alagoas'), ('AM', 'Amazônia'), ('BA', 'Bahia'), ('CE', 'Ceará'), ('DF', 'Distrito Federal'), ('ES', 'Espirito Santo'), ('GO', 'Goiás'), ('MA', 'Maranhão'), ('MG', 'Minas Gerais'), ('MS', 'Mato Grosso do Sul'), ('MT', 'Mato Grosso'), ('PB', 'Paraíba'), ('PE', 'Permanbuco'), ('PI', 'Piauí'), ('PR', 'Paraná'), ('RJ', 'Rio de Janeiro'), ('RN', 'Rio Grande do Norte'), ('RO', 'Rondônia'), ('RR', 'Rorâima'), ('RS', 'Rio Grande do Sul'), ('SC', 'Santa Catarina'), ('SE', 'Sergipe'), ('SP', 'São Paulo')], max_length=2, null=True, verbose_name='Estado')),
                ('politically_exposed', models.BooleanField(default=False, verbose_name='Pessoa politicamente exposta')),
                ('rg_cnh', models.FileField(blank=True, null=True, upload_to=clients.models.upload_rg_cnh, validators=[django.core.validators.FileExtensionValidator(['png', 'jpeg', 'jpg', 'pdf'])], verbose_name='RG/CNH')),
                ('company_agreement', models.FileField(blank=True, null=True, upload_to=clients.models.upload_company_agreement, validators=[django.core.validators.FileExtensionValidator(['png', 'jpeg', 'jpg', 'pdf'])], verbose_name='Contrato social')),
                ('address_proof', models.FileField(blank=True, null=True, upload_to=clients.models.upload_address_proof, validators=[django.core.validators.FileExtensionValidator(['png', 'jpeg', 'jpg', 'pdf'])], verbose_name='Comprovante de endereço')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Criação')),
            ],
            options={
                'verbose_name': 'Cliente',
                'verbose_name_plural': 'Clientes',
            },
        ),
        migrations.CreateModel(
            name='HistoricalClient',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('message', models.CharField(blank=True, max_length=2048, null=True, verbose_name='Mensagem')),
                ('status', models.CharField(blank=True, choices=[('CRE', 'Criado'), ('WAI', 'Aguardando'), ('APP', 'Aprovado'), ('DIS', 'Reprovado')], max_length=3, null=True, verbose_name='Situação')),
                ('first_name', models.CharField(max_length=150, verbose_name='Nome')),
                ('last_name', models.CharField(max_length=150, verbose_name='Sobrenome')),
                ('type', models.CharField(choices=[('PF', 'Pessoa física'), ('PJ', 'Pessoa jurídica')], default='PF', max_length=2, verbose_name='Pessoa física/jurídica')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Data de nascimento')),
                ('cpf', models.CharField(blank=True, max_length=14, null=True, verbose_name='CPF')),
                ('cnpj', models.CharField(blank=True, max_length=20, null=True, verbose_name='CNPJ')),
                ('company_name', models.CharField(blank=True, max_length=256, null=True, verbose_name='Nome da empresa')),
                ('phone', models.CharField(blank=True, max_length=15, null=True, verbose_name='Telefone')),
                ('address', models.CharField(blank=True, max_length=256, null=True, verbose_name='Endereço')),
                ('number', models.CharField(blank=True, max_length=10, null=True, verbose_name='Número')),
                ('complement', models.CharField(blank=True, max_length=64, null=True, verbose_name='Complemento')),
                ('zip_code', models.CharField(blank=True, max_length=9, null=True, verbose_name='Cep')),
                ('city', models.CharField(blank=True, max_length=128, null=True, verbose_name='Cidade')),
                ('state', models.CharField(blank=True, choices=[('AC', 'Acre'), ('AL', 'Alagoas'), ('AM', 'Amazônia'), ('BA', 'Bahia'), ('CE', 'Ceará'), ('DF', 'Distrito Federal'), ('ES', 'Espirito Santo'), ('GO', 'Goiás'), ('MA', 'Maranhão'), ('MG', 'Minas Gerais'), ('MS', 'Mato Grosso do Sul'), ('MT', 'Mato Grosso'), ('PB', 'Paraíba'), ('PE', 'Permanbuco'), ('PI', 'Piauí'), ('PR', 'Paraná'), ('RJ', 'Rio de Janeiro'), ('RN', 'Rio Grande do Norte'), ('RO', 'Rondônia'), ('RR', 'Rorâima'), ('RS', 'Rio Grande do Sul'), ('SC', 'Santa Catarina'), ('SE', 'Sergipe'), ('SP', 'São Paulo')], max_length=2, null=True, verbose_name='Estado')),
                ('politically_exposed', models.BooleanField(default=False, verbose_name='Pessoa politicamente exposta')),
                ('rg_cnh', models.TextField(blank=True, max_length=100, null=True, validators=[django.core.validators.FileExtensionValidator(['png', 'jpeg', 'jpg', 'pdf'])], verbose_name='RG/CNH')),
                ('company_agreement', models.TextField(blank=True, max_length=100, null=True, validators=[django.core.validators.FileExtensionValidator(['png', 'jpeg', 'jpg', 'pdf'])], verbose_name='Contrato social')),
                ('address_proof', models.TextField(blank=True, max_length=100, null=True, validators=[django.core.validators.FileExtensionValidator(['png', 'jpeg', 'jpg', 'pdf'])], verbose_name='Comprovante de endereço')),
                ('date_created', models.DateTimeField(blank=True, editable=False, verbose_name='Criação')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical Cliente',
                'verbose_name_plural': 'historical Clientes',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
